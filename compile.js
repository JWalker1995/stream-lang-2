let path = require('path');
let antlr = require('antlr4');

let config = require('./config');

// Loads the lexer and parser class generated by the antlr compiler.
let LexerClass = require(path.resolve(config.cache_dir, 'StreamLexer.js')).StreamLexer;
let ParserClass = require(path.resolve(config.cache_dir, 'StreamParser.js')).StreamParser;

let process_node = require('./process_node');

module.exports = function(input) {
    // Take the string of code, and generate a stream of tokens using the antlr lexer.
    let chars = new antlr.InputStream(input);
    let lexer = new LexerClass(chars);
    let tokens = new antlr.CommonTokenStream(lexer);

    // Take the stream of tokens, and create a parser class using the antlr parser.
    // Doesn't execute it yet.
    let parser = new ParserClass(tokens);

    // I don't know what this does
    parser.buildParseTrees = true;

    let tree = parser.main();
    return process_node(tree);
};

let res = module.exports('{}');
process.stdout.write(res);
process.stdout.write('\n');
